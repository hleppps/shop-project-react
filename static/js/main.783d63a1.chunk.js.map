{"version":3,"sources":["apollo/mutations.js","apollo/queries.js","components/Backdrop/Backdrop.js","components/Button/Button.js","components/Modal/Modal.js","components/ErrorHandler/ErrorHandler.js","components/Layout/Layout.js","components/Navigation/MobileToggle/MobileToggle.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/MainNavigation/MainNavigation.js","components/Navigation/MobileNavigation/MobileNavigation.js","components/Toolbar/Toolbar.js","components/Form/Input/Input.js","util/validators.js","pages/Auth/Auth.js","pages/Auth/Login.js","pages/Auth/Signup.js","components/Form/Input/FilePicker.js","components/Image/Image.js","util/image.js","components/Feed/FeedEdit/FeedEdit.js","components/Feed/Post/Post.js","components/Loader/Loader.js","components/Paginator/Paginator.js","pages/Feed/Feed.js","pages/Feed/SinglePost/SinglePost.js","App.js","index.js"],"names":["UPDATE_STATUS","gql","_templateObject","Object","taggedTemplateLiteral","CREATE_POST","_templateObject2","UPDATE_POST","_templateObject3","DELETE_POST","_templateObject4","CREATE_USER","_templateObject5","GET_POST","queries_templateObject","GET_STATUS","queries_templateObject2","GET_POSTS","queries_templateObject3","USER_LOGIN","queries_templateObject4","backdrop","props","ReactDOM","createPortal","react_default","a","createElement","className","open","join","onClick","document","getElementById","button","link","Link","concat","design","mode","to","children","disabled","loading","type","modal","title","Button_Button","onCancelModal","onAcceptModal","acceptEnabled","isLoading","errorHandler","react","error","Backdrop_Backdrop","onHandle","Modal_Modal","message","layout","header","mobileNav","mobileToggle","onOpen","logo","navItems","id","text","auth","navigationItems","toConsumableArray","filter","item","isAuth","map","key","mobile","NavLink","exact","onChoose","onLogout","mainNavigation","MobileToggle_MobileToggle","onOpenMobileNav","Logo_Logo","NavigationItems_NavigationItems","mobileNavigation","onChooseItem","toolbar","input","label","htmlFor","control","valid","touched","required","value","placeholder","onChange","e","target","files","onBlur","rows","trim","length","config","isValid","min","max","email","test","Login","state","loginForm","validators","password","formIsValid","inputChangeHandler","_this","setState","prevState","_step","_iterator","_createForOfIteratorHelper","s","n","done","validator","err","f","updatedForm","objectSpread","defineProperty","inputName","inputBlurHandler","_this2","this","Auth_Auth","onSubmit","onLogin","Input_Input","bind","Component","Signup","signupForm","name","Signup_createForOfIteratorHelper","onSignup","filePicker","image","style","backgroundImage","imageUrl","backgroundSize","contain","backgroundPosition","left","generateBase64FromImage","imageFile","reader","FileReader","promise","Promise","resolve","reject","onload","result","onerror","readAsDataURL","POST_FORM","content","FeedEdit","postForm","imagePreview","postInputChangeHandler","then","b64","catch","FeedEdit_createForOfIteratorHelper","cancelPostChangeHandler","onCancelEdit","acceptPostChangeHandler","post","onFinishEdit","prevProps","editing","selectedPost","imagePath","FilePicker","Image_Image","author","date","onStartEdit","onDelete","loader","paginator","currentPage","onPrevious","lastPage","onNext","withRouter","_useState","useState","isEditing","posts","totalPosts","editPost","status","postPage","postsLoading","editLoading","_useState2","slicedToArray","_useLazyQuery","useLazyQuery","QUERIES","loadStatusQuery","loadPostsQuery","useQuery","variables","page","_useMutation","useMutation","MUTATIONS","updateStatusMutation","_useMutation3","createPostMutation","_useMutation5","updatePostMutation","_useMutation7","deletePostMutation","useEffect","resData","localStorage","removeItem","window","location","reload","data","user","catchError","loadPosts","direction","refetch","console","log","errors","Error","ErrorHandler","Feed_FeedEdit_FeedEdit","postData","formData","FormData","append","fetch","method","headers","Authorization","token","body","res","json","fileResData","filePath","replace","mutation","postId","_id","_ref","resDataField","creator","createdAt","updatedPosts","updatedTotalPosts","findIndex","p","pop","unshift","event","preventDefault","userStatus","textAlign","marginTop","Loader_Loader","Paginator_Paginator","Math","ceil","Post_Post","Date","toLocaleDateString","find","SinglePost","match","params","_useQuery","showMobileNav","showBackdrop","userId","authLoading","loginUserQuery","signupUserQuery","getItem","expiryDate","logoutHandler","remainingMilliseconds","getTime","setAutoLogout","mobileNavHandler","isOpen","loginHandler","authData","login","setItem","toISOString","code","signupHandler","history","milliseconds","setTimeout","routes","Switch","Route","path","render","Auth_Login","assign","Auth_Signup","Redirect","pages_Feed_Feed","Feed_SinglePost_SinglePost","setError","Layout_Layout","Toolbar_Toolbar","MainNavigation_MainNavigation","MobileNavigation_MobileNavigation","httpLink","HttpLink","uri","authMiddleware","ApolloLink","operation","forward","setContext","_ref$headers","Content-Type","authorization","client","ApolloClient","cache","InMemoryCache","defaultOptions","query","fetchPolicy","ApolloProvider","BrowserRouter","src_App_0"],"mappings":"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","file":"static/js/main.783d63a1.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\r\n\r\nexport const UPDATE_STATUS = gql`\r\n  mutation UpdateUserStatus($userStatus: String!) {\r\n    updateStatus(status: $userStatus) {\r\n      status\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_POST = gql`\r\n  mutation CreateNewPost(\r\n    $title: String!\r\n    $content: String!\r\n    $imageUrl: String!\r\n  ) {\r\n    createPost(\r\n      postInput: { title: $title, content: $content, imageUrl: $imageUrl }\r\n    ) {\r\n      _id\r\n      title\r\n      content\r\n      imageUrl\r\n      creator {\r\n        name\r\n      }\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPDATE_POST = gql`\r\n  mutation UpdateExistingPost(\r\n    $postId: ID!\r\n    $title: String!\r\n    $content: String!\r\n    $imageUrl: String!\r\n  ) {\r\n    updatePost(\r\n      id: $postId\r\n      postInput: { title: $title, content: $content, imageUrl: $imageUrl }\r\n    ) {\r\n      _id\r\n      title\r\n      content\r\n      imageUrl\r\n      creator {\r\n        name\r\n      }\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DELETE_POST = gql`\r\n  mutation DeletePost($postId: ID!) {\r\n    deletePost(id: $postId)\r\n  }\r\n`;\r\n\r\nexport const CREATE_USER = gql`\r\n  mutation CreateNewUser($email: String!, $name: String!, $password: String!) {\r\n    createUser(userInput: { email: $email, name: $name, password: $password }) {\r\n      _id\r\n      email\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_POST = gql`\r\n  query FetchSinglePost($postId: ID!) {\r\n    post(id: $postId) {\r\n      title\r\n      content\r\n      imageUrl\r\n      creator {\r\n        name\r\n      }\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_STATUS = gql`\r\n  query GetStatus {\r\n    user {\r\n      status\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_POSTS = gql`\r\n  query FetchPosts($page: Int) {\r\n    posts(page: $page) {\r\n      posts {\r\n        _id\r\n        title\r\n        content\r\n        imageUrl\r\n        creator {\r\n          name\r\n        }\r\n        createdAt\r\n      }\r\n      totalPosts\r\n    }\r\n  }\r\n`;\r\n\r\nexport const USER_LOGIN = gql`\r\n  query UserLogin($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      token\r\n      userId\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst backdrop = props =>\n  ReactDOM.createPortal(\n    <div\n      className={['backdrop', props.open ? 'open' : ''].join(' ')}\n      onClick={props.onClick}\n    />,\n    document.getElementById('backdrop-root')\n  );\n\nexport default backdrop;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst button = props =>\n  !props.link ? (\n    <button\n      className={[\n        'button',\n        `button--${props.design}`,\n        `button--${props.mode}`\n      ].join(' ')}\n      onClick={props.onClick}\n      disabled={props.disabled || props.loading}\n      type={props.type}\n    >\n      {props.loading ? 'Loading...' : props.children}\n    </button>\n  ) : (\n    <Link\n      className={[\n        'button',\n        `button--${props.design}`,\n        `button--${props.mode}`\n      ].join(' ')}\n      to={props.link}\n    >\n      {props.children}\n    </Link>\n  );\n\nexport default button;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Button from '../Button/Button';\nimport './Modal.css';\n\nconst modal = props =>\n  ReactDOM.createPortal(\n    <div className=\"modal\">\n      <header className=\"modal__header\">\n        <h1>{props.title}</h1>\n      </header>\n      <div className=\"modal__content\">{props.children}</div>\n      <div className=\"modal__actions\">\n        <Button design=\"danger\" mode=\"flat\" onClick={props.onCancelModal}>\n          Cancel\n        </Button>\n        <Button\n          mode=\"raised\"\n          onClick={props.onAcceptModal}\n          disabled={!props.acceptEnabled}\n          loading={props.isLoading}\n        >\n          Accept\n        </Button>\n      </div>\n    </div>,\n    document.getElementById('modal-root')\n  );\n\nexport default modal;\n","import React, { Fragment } from 'react';\n\nimport Backdrop from '../Backdrop/Backdrop';\nimport Modal from '../Modal/Modal';\n\nconst errorHandler = props => (\n  <Fragment>\n    {props.error && <Backdrop onClick={props.onHandle} />}\n    {props.error && (\n      <Modal\n        title=\"An Error Occurred\"\n        onCancelModal={props.onHandle}\n        onAcceptModal={props.onHandle}\n        acceptEnabled\n      >\n        <p>{props.error.message}</p>\n      </Modal>\n    )}\n  </Fragment>\n);\n\nexport default errorHandler;\n","import React, { Fragment } from 'react';\n\nimport './Layout.css';\n\nconst layout = props => (\n  <Fragment>\n    <header className=\"main-header\">{props.header}</header>\n    {props.mobileNav}\n    <main className=\"content\">{props.children}</main>\n  </Fragment>\n);\n\nexport default layout;\n","import React from 'react';\n\nimport './MobileToggle.css';\n\nconst mobileToggle = props => (\n  <button className=\"mobile-toggle\" onClick={props.onOpen}>\n    <span className=\"mobile-toggle__bar\" />\n    <span className=\"mobile-toggle__bar\" />\n    <span className=\"mobile-toggle__bar\" />\n  </button>\n);\n\nexport default mobileToggle;\n","import React from 'react';\n\nimport './Logo.css';\n\nconst logo = props => <h1 className=\"logo\">MessageNode</h1>;\n\nexport default logo;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport \"./NavigationItems.css\";\n\nconst navItems = [\n  { id: \"feed\", text: \"Feed\", link: \"/\", auth: true },\n  { id: \"login\", text: \"Login\", link: \"/\", auth: false },\n  { id: \"signup\", text: \"Signup\", link: \"/signup\", auth: false },\n];\n\nconst navigationItems = (props) => [\n  ...navItems\n    .filter((item) => item.auth === props.isAuth)\n    .map((item) => (\n      <li\n        key={item.id}\n        className={[\"navigation-item\", props.mobile ? \"mobile\" : \"\"].join(\" \")}\n      >\n        <NavLink to={item.link} exact onClick={props.onChoose}>\n          {item.text}\n        </NavLink>\n      </li>\n    )),\n  props.isAuth && (\n    <li className=\"navigation-item\" key=\"logout\">\n      <button onClick={props.onLogout}>Logout</button>\n    </li>\n  ),\n];\n\nexport default navigationItems;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport MobileToggle from \"../MobileToggle/MobileToggle\";\nimport Logo from \"../../Logo/Logo\";\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\n\nimport \"./MainNavigation.css\";\n\nconst mainNavigation = (props) => {\n  return (\n    <nav className=\"main-nav\">\n      <MobileToggle onOpen={props.onOpenMobileNav} />\n      <div className=\"main-nav__logo\">\n        <NavLink to=\"/\">\n          <Logo />\n        </NavLink>\n      </div>\n      <div className=\"spacer\" />\n      <ul className=\"main-nav__items\">\n        <NavigationItems isAuth={props.isAuth} onLogout={props.onLogout} />\n      </ul>\n    </nav>\n  );\n};\n\nexport default mainNavigation;\n","import React from \"react\";\n\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\nimport \"./MobileNavigation.css\";\n\nconst mobileNavigation = (props) => {\n  return (\n    <nav className={[\"mobile-nav\", props.open ? \"open\" : \"\"].join(\" \")}>\n      <ul\n        className={[\"mobile-nav__items\", props.mobile ? \"mobile\" : \"\"].join(\n          \" \"\n        )}\n      >\n        <NavigationItems\n          mobile\n          onChoose={props.onChooseItem}\n          isAuth={props.isAuth}\n          onLogout={props.onLogout}\n        />\n      </ul>\n    </nav>\n  );\n};\n\nexport default mobileNavigation;\n","import React from 'react';\n\nimport './Toolbar.css';\n\nconst toolbar = props => (\n    <div className=\"toolbar\">\n       {props.children}\n    </div>\n);\n\nexport default toolbar;","import React from 'react';\n\nimport './Input.css';\n\nconst input = props => (\n  <div className=\"input\">\n    {props.label && <label htmlFor={props.id}>{props.label}</label>}\n    {props.control === 'input' && (\n      <input\n        className={[\n          !props.valid ? 'invalid' : 'valid',\n          props.touched ? 'touched' : 'untouched'\n        ].join(' ')}\n        type={props.type}\n        id={props.id}\n        required={props.required}\n        value={props.value}\n        placeholder={props.placeholder}\n        onChange={e => props.onChange(props.id, e.target.value, e.target.files)}\n        onBlur={props.onBlur}\n      />\n    )}\n    {props.control === 'textarea' && (\n      <textarea\n        className={[\n          !props.valid ? 'invalid' : 'valid',\n          props.touched ? 'touched' : 'untouched'\n        ].join(' ')}\n        id={props.id}\n        rows={props.rows}\n        required={props.required}\n        value={props.value}\n        onChange={e => props.onChange(props.id, e.target.value)}\n        onBlur={props.onBlur}\n      />\n    )}\n  </div>\n);\n\nexport default input;\n","export const required = value => value.trim() !== '';\n\nexport const length = config => value => {\n  let isValid = true;\n  if (config.min) {\n    isValid = isValid && value.trim().length >= config.min;\n  }\n  if (config.max) {\n    isValid = isValid && value.trim().length <= config.max;\n  }\n  return isValid;\n};\n\nexport const email = value =>\n  /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/.test(\n    value\n  );\n","import React from 'react';\n\nimport './Auth.css';\n\nconst auth = props => <section className=\"auth-form\">{props.children}</section>;\n\nexport default auth;\n","import React, { Component } from 'react';\n\nimport Input from '../../components/Form/Input/Input';\nimport Button from '../../components/Button/Button';\nimport { required, length, email } from '../../util/validators';\nimport Auth from './Auth';\n\nclass Login extends Component {\n  state = {\n    loginForm: {\n      email: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, email]\n      },\n      password: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, length({ min: 5 })]\n      },\n      formIsValid: false\n    }\n  };\n\n  inputChangeHandler = (input, value) => {\n    this.setState(prevState => {\n      let isValid = true;\n      for (const validator of prevState.loginForm[input].validators) {\n        isValid = isValid && validator(value);\n      }\n      const updatedForm = {\n        ...prevState.loginForm,\n        [input]: {\n          ...prevState.loginForm[input],\n          valid: isValid,\n          value: value\n        }\n      };\n      let formIsValid = true;\n      for (const inputName in updatedForm) {\n        formIsValid = formIsValid && updatedForm[inputName].valid;\n      }\n      return {\n        loginForm: updatedForm,\n        formIsValid: formIsValid\n      };\n    });\n  };\n\n  inputBlurHandler = input => {\n    this.setState(prevState => {\n      return {\n        loginForm: {\n          ...prevState.loginForm,\n          [input]: {\n            ...prevState.loginForm[input],\n            touched: true\n          }\n        }\n      };\n    });\n  };\n\n  render() {\n    return (\n      <Auth>\n        <form\n          onSubmit={e =>\n            this.props.onLogin(e, {\n              email: this.state.loginForm.email.value,\n              password: this.state.loginForm.password.value\n            })\n          }\n        >\n          <Input\n            id=\"email\"\n            label=\"Your E-Mail\"\n            type=\"email\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'email')}\n            value={this.state.loginForm['email'].value}\n            valid={this.state.loginForm['email'].valid}\n            touched={this.state.loginForm['email'].touched}\n          />\n          <Input\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'password')}\n            value={this.state.loginForm['password'].value}\n            valid={this.state.loginForm['password'].valid}\n            touched={this.state.loginForm['password'].touched}\n          />\n          <Button design=\"raised\" type=\"submit\" loading={this.props.loading}>\n            Login\n          </Button>\n        </form>\n      </Auth>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\n\nimport Input from '../../components/Form/Input/Input';\nimport Button from '../../components/Button/Button';\nimport { required, length, email } from '../../util/validators';\nimport Auth from './Auth';\n\nclass Signup extends Component {\n  state = {\n    signupForm: {\n      email: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, email]\n      },\n      password: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, length({ min: 5 })]\n      },\n      name: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required]\n      },\n      formIsValid: false\n    }\n  };\n\n  inputChangeHandler = (input, value) => {\n    this.setState(prevState => {\n      let isValid = true;\n      for (const validator of prevState.signupForm[input].validators) {\n        isValid = isValid && validator(value);\n      }\n      const updatedForm = {\n        ...prevState.signupForm,\n        [input]: {\n          ...prevState.signupForm[input],\n          valid: isValid,\n          value: value\n        }\n      };\n      let formIsValid = true;\n      for (const inputName in updatedForm) {\n        formIsValid = formIsValid && updatedForm[inputName].valid;\n      }\n      return {\n        signupForm: updatedForm,\n        formIsValid: formIsValid\n      };\n    });\n  };\n\n  inputBlurHandler = input => {\n    this.setState(prevState => {\n      return {\n        signupForm: {\n          ...prevState.signupForm,\n          [input]: {\n            ...prevState.signupForm[input],\n            touched: true\n          }\n        }\n      };\n    });\n  };\n\n  render() {\n    return (\n      <Auth>\n        <form onSubmit={e => this.props.onSignup(e, this.state)}>\n          <Input\n            id=\"email\"\n            label=\"Your E-Mail\"\n            type=\"email\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'email')}\n            value={this.state.signupForm['email'].value}\n            valid={this.state.signupForm['email'].valid}\n            touched={this.state.signupForm['email'].touched}\n          />\n          <Input\n            id=\"name\"\n            label=\"Your Name\"\n            type=\"text\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'name')}\n            value={this.state.signupForm['name'].value}\n            valid={this.state.signupForm['name'].valid}\n            touched={this.state.signupForm['name'].touched}\n          />\n          <Input\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'password')}\n            value={this.state.signupForm['password'].value}\n            valid={this.state.signupForm['password'].valid}\n            touched={this.state.signupForm['password'].touched}\n          />\n          <Button design=\"raised\" type=\"submit\" loading={this.props.loading}>\n            Signup\n          </Button>\n        </form>\n      </Auth>\n    );\n  }\n}\n\nexport default Signup;\n","import React from 'react';\n\nimport './Input.css';\n\nconst filePicker = props => (\n  <div className=\"input\">\n    <label htmlFor={props.id}>{props.label}</label>\n    <input\n      className={[\n        !props.valid ? 'invalid' : 'valid',\n        props.touched ? 'touched' : 'untouched'\n      ].join(' ')}\n      type=\"file\"\n      id={props.id}\n      onChange={e => props.onChange(props.id, e.target.value, e.target.files)}\n      onBlur={props.onBlur}\n    />\n  </div>\n);\n\nexport default filePicker;\n","import React from 'react';\n\nimport './Image.css';\n\nconst image = props => (\n  <div\n    className=\"image\"\n    style={{\n      backgroundImage: `url('${props.imageUrl}')`,\n      backgroundSize: props.contain ? 'contain' : 'cover',\n      backgroundPosition: props.left ? 'left' : 'center'\n    }}\n  />\n);\n\nexport default image;\n","export const generateBase64FromImage = imageFile => {\n  const reader = new FileReader();\n  const promise = new Promise((resolve, reject) => {\n    reader.onload = e => resolve(e.target.result);\n    reader.onerror = err => reject(err);\n  });\n\n  reader.readAsDataURL(imageFile);\n  return promise;\n};\n","import React, { Component, Fragment } from 'react';\n\nimport Backdrop from '../../Backdrop/Backdrop';\nimport Modal from '../../Modal/Modal';\nimport Input from '../../Form/Input/Input';\nimport FilePicker from '../../Form/Input/FilePicker';\nimport Image from '../../Image/Image';\nimport { required, length } from '../../../util/validators';\nimport { generateBase64FromImage } from '../../../util/image';\n\nconst POST_FORM = {\n  title: {\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [required, length({ min: 5 })]\n  },\n  image: {\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [required]\n  },\n  content: {\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [required, length({ min: 5 })]\n  }\n};\n\nclass FeedEdit extends Component {\n  state = {\n    postForm: POST_FORM,\n    formIsValid: false,\n    imagePreview: null\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      this.props.editing &&\n      prevProps.editing !== this.props.editing &&\n      prevProps.selectedPost !== this.props.selectedPost\n    ) {\n      const postForm = {\n        title: {\n          ...prevState.postForm.title,\n          value: this.props.selectedPost.title,\n          valid: true\n        },\n        image: {\n          ...prevState.postForm.image,\n          value: this.props.selectedPost.imagePath,\n          valid: true\n        },\n        content: {\n          ...prevState.postForm.content,\n          value: this.props.selectedPost.content,\n          valid: true\n        }\n      };\n      this.setState({ postForm: postForm, formIsValid: true });\n    }\n  }\n\n  postInputChangeHandler = (input, value, files) => {\n    if (files) {\n      generateBase64FromImage(files[0])\n        .then(b64 => {\n          this.setState({ imagePreview: b64 });\n        })\n        .catch(e => {\n          this.setState({ imagePreview: null });\n        });\n    }\n    this.setState(prevState => {\n      let isValid = true;\n      for (const validator of prevState.postForm[input].validators) {\n        isValid = isValid && validator(value);\n      }\n      const updatedForm = {\n        ...prevState.postForm,\n        [input]: {\n          ...prevState.postForm[input],\n          valid: isValid,\n          value: files ? files[0] : value\n        }\n      };\n      let formIsValid = true;\n      for (const inputName in updatedForm) {\n        formIsValid = formIsValid && updatedForm[inputName].valid;\n      }\n      return {\n        postForm: updatedForm,\n        formIsValid: formIsValid\n      };\n    });\n  };\n\n  inputBlurHandler = input => {\n    this.setState(prevState => {\n      return {\n        postForm: {\n          ...prevState.postForm,\n          [input]: {\n            ...prevState.postForm[input],\n            touched: true\n          }\n        }\n      };\n    });\n  };\n\n  cancelPostChangeHandler = () => {\n    this.setState({\n      postForm: POST_FORM,\n      formIsValid: false\n    });\n    this.props.onCancelEdit();\n  };\n\n  acceptPostChangeHandler = () => {\n    const post = {\n      title: this.state.postForm.title.value,\n      image: this.state.postForm.image.value,\n      content: this.state.postForm.content.value\n    };\n    this.props.onFinishEdit(post);\n    this.setState({\n      postForm: POST_FORM,\n      formIsValid: false,\n      imagePreview: null\n    });\n  };\n\n  render() {\n    return this.props.editing ? (\n      <Fragment>\n        <Backdrop onClick={this.cancelPostChangeHandler} />\n        <Modal\n          title=\"New Post\"\n          acceptEnabled={this.state.formIsValid}\n          onCancelModal={this.cancelPostChangeHandler}\n          onAcceptModal={this.acceptPostChangeHandler}\n          isLoading={this.props.loading}\n        >\n          <form>\n            <Input\n              id=\"title\"\n              label=\"Title\"\n              control=\"input\"\n              onChange={this.postInputChangeHandler}\n              onBlur={this.inputBlurHandler.bind(this, 'title')}\n              valid={this.state.postForm['title'].valid}\n              touched={this.state.postForm['title'].touched}\n              value={this.state.postForm['title'].value}\n            />\n            <FilePicker\n              id=\"image\"\n              label=\"Image\"\n              control=\"input\"\n              onChange={this.postInputChangeHandler}\n              onBlur={this.inputBlurHandler.bind(this, 'image')}\n              valid={this.state.postForm['image'].valid}\n              touched={this.state.postForm['image'].touched}\n            />\n            <div className=\"new-post__preview-image\">\n              {!this.state.imagePreview && <p>Please choose an image.</p>}\n              {this.state.imagePreview && (\n                <Image imageUrl={this.state.imagePreview} contain left />\n              )}\n            </div>\n            <Input\n              id=\"content\"\n              label=\"Content\"\n              control=\"textarea\"\n              rows=\"5\"\n              onChange={this.postInputChangeHandler}\n              onBlur={this.inputBlurHandler.bind(this, 'content')}\n              valid={this.state.postForm['content'].valid}\n              touched={this.state.postForm['content'].touched}\n              value={this.state.postForm['content'].value}\n            />\n          </form>\n        </Modal>\n      </Fragment>\n    ) : null;\n  }\n}\n\nexport default FeedEdit;\n","import React from 'react';\n\nimport Button from '../../Button/Button';\nimport './Post.css';\n\nconst post = props => (\n  <article className=\"post\">\n    <header className=\"post__header\">\n      <h3 className=\"post__meta\">\n        Posted by {props.author} on {props.date}\n      </h3>\n      <h1 className=\"post__title\">{props.title}</h1>\n    </header>\n    {/* <div className=\"post__image\">\n      <Image imageUrl={props.image} contain />\n    </div>\n    <div className=\"post__content\">{props.content}</div> */}\n    <div className=\"post__actions\">\n      <Button mode=\"flat\" link={props.id}>\n        View\n      </Button>\n      <Button mode=\"flat\" onClick={props.onStartEdit}>\n        Edit\n      </Button>\n      <Button mode=\"flat\" design=\"danger\" onClick={props.onDelete}>\n        Delete\n      </Button>\n    </div>\n  </article>\n);\n\nexport default post;\n","import React from 'react';\n\nimport './Loader.css';\n\nconst loader = props => (\n  <div className=\"loader\">\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n\nexport default loader;\n","import React from 'react';\n\nimport './Paginator.css';\n\nconst paginator = props => (\n  <div className=\"paginator\">\n    {props.children}\n    <div className=\"paginator__controls\">\n      {props.currentPage > 1 && (\n        <button className=\"paginator__control\" onClick={props.onPrevious}>\n          Previous\n        </button>\n      )}\n      {props.currentPage < props.lastPage && (\n        <button className=\"paginator__control\" onClick={props.onNext}>\n          Next\n        </button>\n      )}\n    </div>\n  </div>\n);\n\nexport default paginator;\n","import { useLazyQuery, useMutation, useQuery } from \"@apollo/client\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport * as MUTATIONS from \"../../apollo/mutations\";\nimport * as QUERIES from \"../../apollo/queries\";\nimport Button from \"../../components/Button/Button\";\nimport ErrorHandler from \"../../components/ErrorHandler/ErrorHandler\";\nimport FeedEdit from \"../../components/Feed/FeedEdit/FeedEdit\";\nimport Post from \"../../components/Feed/Post/Post\";\nimport Input from \"../../components/Form/Input/Input\";\nimport Loader from \"../../components/Loader/Loader\";\nimport Paginator from \"../../components/Paginator/Paginator\";\nimport \"./Feed.css\";\n\nconst Feed = (props) => {\n  const [state, setState] = useState({\n    isEditing: false,\n    posts: [],\n    totalPosts: 0,\n    editPost: null,\n    status: \"\",\n    postPage: 1,\n    postsLoading: true,\n    editLoading: false,\n  });\n\n  const [loadStatusQuery] = useLazyQuery(QUERIES.GET_STATUS);\n  const loadPostsQuery = useQuery(QUERIES.GET_POSTS, {\n    variables: { page: 1 },\n  });\n\n  const [updateStatusMutation] = useMutation(MUTATIONS.UPDATE_STATUS);\n  const [createPostMutation] = useMutation(MUTATIONS.CREATE_POST);\n  const [updatePostMutation] = useMutation(MUTATIONS.UPDATE_POST);\n  const [deletePostMutation] = useMutation(MUTATIONS.DELETE_POST);\n\n  useEffect(() => {\n    loadStatusQuery()\n      .then((resData) => {\n        if (resData.error) {\n          localStorage.removeItem(\"token\");\n          localStorage.removeItem(\"expiryDate\");\n          localStorage.removeItem(\"userId\");\n          window.location.reload();\n        }\n        setState((prevState) => ({\n          ...prevState,\n          status: resData.data.user.status,\n        }));\n      })\n      .catch(catchError);\n\n    loadPosts();\n  }, []);\n\n  const loadPosts = (direction) => {\n    if (direction) {\n      setState((prevState) => ({\n        ...prevState,\n        postsLoading: true,\n        posts: [],\n      }));\n    }\n    let page = state.postPage;\n    if (direction === \"next\") {\n      page++;\n    }\n    if (direction === \"previous\") {\n      page--;\n    }\n\n    setState((prevState) => ({\n      ...prevState,\n      postPage: page,\n    }));\n\n    loadPostsQuery\n      .refetch({ page })\n\n      .then((resData) => {\n        console.log(\"LOADED POSTS\", resData.data.posts.totalPosts);\n        if (resData.errors) {\n          throw new Error(\"Fetching posts failed!\");\n        }\n\n        setState((prevState) => ({\n          ...prevState,\n          posts: resData.data.posts.posts.map((post) => {\n            return { ...post, imagePath: post.imageUrl };\n          }),\n          totalPosts: resData.data.posts.totalPosts,\n          postsLoading: false,\n        }));\n      })\n      .catch(catchError => {\n        console.log(catchError);\n      });\n  };\n\n  const statusUpdateHandler = (event) => {\n    event.preventDefault();\n\n    updateStatusMutation({ variables: { userStatus: state.status } })\n      .then((resData) => {\n        if (resData.errors) {\n          throw new Error(\"Fetching status failed!\");\n        }\n\n        console.log(resData);\n      })\n      .catch(catchError);\n  };\n\n  const newPostHandler = () => {\n    setState((prevState) => ({\n      ...prevState,\n      isEditing: true,\n    }));\n  };\n\n  const startEditPostHandler = (postId) => {\n    setState((prevState) => ({\n      ...prevState,\n      isEditing: true,\n      editPost: { ...prevState.posts.find((p) => p._id === postId) },\n    }));\n  };\n\n  const cancelEditHandler = () => {\n    setState((prevState) => ({\n      ...prevState,\n      isEditing: false,\n      editPost: null,\n    }));\n  };\n\n  const finishEditHandler = (postData) => {\n    setState((prevState) => ({\n      ...prevState,\n      editLoading: true,\n    }));\n\n    const formData = new FormData();\n    formData.append(\"image\", postData.image);\n    if (state.editPost) {\n      formData.append(\"oldPath\", state.editPost.imagePath);\n    }\n\n    fetch(\"http://localhost:8080/post-image\", {\n      method: \"PUT\",\n      headers: {\n        Authorization: \"Bearer \" + props.token,\n      },\n      body: formData,\n    })\n      .then((res) => res.json())\n      .then((fileResData) => {\n        let imageUrl = fileResData.filePath || \"undefined\";\n        if (imageUrl) {\n          imageUrl = imageUrl.replace(/\\\\/g, \"/\");\n        }\n\n        let mutation = createPostMutation;\n        let variables = {\n          title: postData.title,\n          content: postData.content,\n          imageUrl: imageUrl,\n        };\n\n        if (state.editPost) {\n          mutation = updatePostMutation;\n          variables = {\n            postId: state.editPost._id,\n            title: postData.title,\n            content: postData.content,\n            imageUrl,\n          };\n        }\n        return { mutation, variables };\n      })\n      .then(({ mutation, variables }) => {\n        return mutation({ variables });\n      })\n\n      .then((resData) => {\n        if (resData.errors && resData.errors[0].status === 422) {\n          throw new Error(\n            \"Validation failed. Make sure the email address and/or are valid!\"\n          );\n        }\n        if (resData.errors) {\n          throw new Error(\"Post creation failed!\");\n        }\n\n        console.log(resData);\n        let resDataField = \"createPost\";\n        if (state.editPost) {\n          resDataField = \"updatePost\";\n        }\n        const post = {\n          _id: resData.data[resDataField]._id,\n          title: resData.data[resDataField].title,\n          content: resData.data[resDataField].content,\n          creator: resData.data[resDataField].creator,\n          createdAt: resData.data[resDataField].createdAt,\n          imagePath: resData.data[resDataField].imageUrl,\n        };\n        setState((prevState) => {\n          let updatedPosts = [...prevState.posts];\n          let updatedTotalPosts = prevState.totalPosts;\n\n          if (prevState.editPost) {\n            const postIndex = prevState.posts.findIndex(\n              (p) => p._id === prevState.editPost._id\n            );\n            updatedPosts[postIndex] = post;\n          } else {\n            updatedTotalPosts++;\n            if (prevState.posts.length >= 2) {\n              updatedPosts.pop();\n            }\n            updatedPosts.unshift(post);\n          }\n          return {\n            ...prevState,\n            posts: updatedPosts,\n            isEditing: false,\n            editPost: null,\n            editLoading: false,\n            totalPosts: updatedTotalPosts,\n          };\n        });\n\n      })\n      .catch((err) => {\n        console.log(err);\n\n        setState((prevState) => ({\n          ...prevState,\n          isEditing: false,\n          editPost: null,\n          editLoading: false,\n          error: err,\n        }));\n      });\n  };\n\n  const statusInputChangeHandler = (input, value) => {\n    setState((prevState) => ({\n      ...prevState,\n      status: value,\n    }));\n  };\n\n  const deletePostHandler = (postId) => {\n    setState((prevState) => ({\n      ...prevState,\n      postsLoading: true,\n    }));\n\n    deletePostMutation({ variables: { postId } })\n      .then((resData) => {\n        if (resData.errors) {\n          throw new Error(\"Deleting the post failed!\");\n        }\n\n        console.log(\"POST DELETED:\", resData);\n\n        loadPosts();\n      })\n      .catch((err) => {\n        console.log(err);\n        setState((prevState) => ({\n          ...prevState,\n          postsLoading: false,\n          error: err,\n        }));\n      });\n  };\n\n  const errorHandler = () => {\n    setState((prevState) => ({\n      ...prevState,\n      error: null,\n    }));\n  };\n\n  const catchError = (error) => {\n    setState((prevState) => ({\n      ...prevState,\n      error,\n    }));\n  };\n\n  return (\n    <Fragment>\n      <ErrorHandler error={state.error} onHandle={errorHandler} />\n      <FeedEdit\n        editing={state.isEditing}\n        selectedPost={state.editPost}\n        loading={state.editLoading}\n        onCancelEdit={cancelEditHandler}\n        onFinishEdit={finishEditHandler}\n      />\n      <section className=\"feed__status\">\n        <form onSubmit={statusUpdateHandler}>\n          <Input\n            type=\"text\"\n            placeholder=\"Your status\"\n            control=\"input\"\n            onChange={statusInputChangeHandler}\n            value={state.status}\n          />\n          <Button mode=\"flat\" type=\"submit\">\n            Update\n          </Button>\n        </form>\n      </section>\n      <section className=\"feed__control\">\n        <Button mode=\"raised\" design=\"accent\" onClick={newPostHandler}>\n          New Post\n        </Button>\n      </section>\n      <section className=\"feed\">\n        {state.postsLoading && (\n          <div style={{ textAlign: \"center\", marginTop: \"2rem\" }}>\n            <Loader />\n          </div>\n        )}\n        {state.posts.length <= 0 && !state.postsLoading ? (\n          <p style={{ textAlign: \"center\" }}>No posts found.</p>\n        ) : null}\n        {!state.postsLoading && (\n          <Paginator\n            onPrevious={() => {\n              loadPosts(\"previous\");\n            }}\n            onNext={() => {\n              loadPosts(\"next\");\n            }}\n            lastPage={Math.ceil(state.totalPosts / 2)}\n            currentPage={state.postPage}\n          >\n            {state.posts.map((post) => (\n              <Post\n                key={post._id}\n                id={post._id}\n                author={post.creator.name}\n                date={new Date(post.createdAt).toLocaleDateString(\"en-US\")}\n                title={post.title}\n                image={post.imageUrl}\n                content={post.content}\n                onStartEdit={() => {\n                  startEditPostHandler(post._id);\n                }}\n                onDelete={() => {\n                  deletePostHandler(post._id);\n                }}\n              />\n            ))}\n          </Paginator>\n        )}\n      </section>\n    </Fragment>\n  );\n};\n\n// CLASS COMPONENT\n\n// class FFeed extends Component {\n//   state = {\n//     isEditing: false,\n//     posts: [],\n//     totalPosts: 0,\n//     editPost: null,\n//     status: \"\",\n//     postPage: 1,\n//     postsLoading: true,\n//     editLoading: false,\n//   };\n\n//   componentDidMount() {\n//     this.props.client\n//       .query({ query: QUERIES.GET_STATUS })\n//       .then((resData) => {\n//         console.log(resData);\n//         if (resData.errors) {\n//           throw new Error(\"Fetching status failed!\");\n//         }\n//         this.setState({ status: resData.data.user.status });\n//       })\n//       .catch(this.catchError);\n\n//     this.loadPosts();\n//   }\n\n//   loadPosts = (direction) => {\n//     if (direction) {\n//       this.setState({ postsLoading: true, posts: [] });\n//     }\n//     let page = this.state.postPage;\n//     if (direction === \"next\") {\n//       page++;\n//       this.setState({ postPage: page });\n//     }\n//     if (direction === \"previous\") {\n//       page--;\n//       this.setState({ postPage: page });\n//     }\n\n//     this.props.client\n//       .query({\n//         query: QUERIES.GET_POSTS,\n//         fetchPolicy: \"network-only\",\n//         variables: { page },\n//       })\n//       .then((resData) => {\n//         console.log(\"LOADED POSTS\", resData.data.posts.totalPosts);\n//         if (resData.errors) {\n//           throw new Error(\"Fetching posts failed!\");\n//         }\n\n//         this.setState({\n//           posts: resData.data.posts.posts.map((post) => {\n//             return { ...post, imagePath: post.imageUrl };\n//           }),\n//           totalPosts: resData.data.posts.totalPosts,\n//           postsLoading: false,\n//         });\n//         return;\n//       })\n//       .then(() => {\n//         return this.props.client.query({\n//           query: QUERIES.GET_STATUS,\n//         });\n//       })\n//       .then((queryRes) => {\n//         console.log(\"QUERY POSTS: loading -\", queryRes.data.user.status);\n//       })\n//       .catch(this.catchError);\n//   };\n\n//   statusUpdateHandler = (event) => {\n//     event.preventDefault();\n\n//     this.props.client\n//       .mutate({\n//         mutation: MUTATIONS.UPDATE_STATUS,\n//         variables: { userStatus: this.state.status },\n//       })\n//       .then((resData) => {\n//         if (resData.errors) {\n//           throw new Error(\"Fetching status failed!\");\n//         }\n\n//         console.log(resData);\n//       })\n//       .catch(this.catchError);\n//   };\n\n//   newPostHandler = () => {\n//     this.setState({ isEditing: true });\n//   };\n\n//   startEditPostHandler = (postId) => {\n//     this.setState((prevState) => {\n//       const loadedPost = { ...prevState.posts.find((p) => p._id === postId) };\n\n//       return {\n//         isEditing: true,\n//         editPost: loadedPost,\n//       };\n//     });\n//   };\n\n//   cancelEditHandler = () => {\n//     this.setState({ isEditing: false, editPost: null });\n//   };\n\n//   finishEditHandler = (postData) => {\n//     this.setState({\n//       editLoading: true,\n//     });\n//     const formData = new FormData();\n//     formData.append(\"image\", postData.image);\n//     if (this.state.editPost) {\n//       formData.append(\"oldPath\", this.state.editPost.imagePath);\n//     }\n//     fetch(\"http://localhost:8080/post-image\", {\n//       method: \"PUT\",\n//       headers: {\n//         Authorization: \"Bearer \" + this.props.token,\n//       },\n//       body: formData,\n//     })\n//       .then((res) => res.json())\n//       .then((fileResData) => {\n//         let imageUrl = fileResData.filePath || \"undefined\";\n//         if (imageUrl) {\n//           imageUrl = imageUrl.replace(/\\\\/g, \"/\");\n//         }\n\n//         let mutation = MUTATIONS.CREATE_POST;\n//         let variables = {\n//           title: postData.title,\n//           content: postData.content,\n//           imageUrl: imageUrl,\n//         };\n\n//         if (this.state.editPost) {\n//           mutation = MUTATIONS.UPDATE_POST;\n//           variables = {\n//             postId: this.state.editPost._id,\n//             title: postData.title,\n//             content: postData.content,\n//             imageUrl,\n//           };\n//         }\n//         return { mutation, variables };\n//       })\n//       .then(({ mutation, variables }) => {\n//         return this.props.client.mutate({ mutation, variables });\n//       })\n\n//       .then((resData) => {\n//         if (resData.errors && resData.errors[0].status === 422) {\n//           throw new Error(\n//             \"Validation failed. Make sure the email address and/or are valid!\"\n//           );\n//         }\n//         if (resData.errors) {\n//           throw new Error(\"Post creation failed!\");\n//         }\n\n//         console.log(resData);\n//         let resDataField = \"createPost\";\n//         if (this.state.editPost) {\n//           resDataField = \"updatePost\";\n//         }\n//         const post = {\n//           _id: resData.data[resDataField]._id,\n//           title: resData.data[resDataField].title,\n//           content: resData.data[resDataField].content,\n//           creator: resData.data[resDataField].creator,\n//           createdAt: resData.data[resDataField].createdAt,\n//           imagePath: resData.data[resDataField].imageUrl,\n//         };\n\n//         this.setState((prevState) => {\n//           let updatedPosts = [...prevState.posts];\n//           let updatedTotalPosts = prevState.totalPosts;\n\n//           if (prevState.editPost) {\n//             const postIndex = prevState.posts.findIndex(\n//               (p) => p._id === prevState.editPost._id\n//             );\n//             updatedPosts[postIndex] = post;\n//           } else {\n//             updatedTotalPosts++;\n//             if (prevState.posts.length >= 2) {\n//               updatedPosts.pop();\n//             }\n//             updatedPosts.unshift(post);\n//           }\n//           return {\n//             posts: updatedPosts,\n//             isEditing: false,\n//             editPost: null,\n//             editLoading: false,\n//             totalPosts: updatedTotalPosts,\n//           };\n//         });\n//       })\n//       .catch((err) => {\n//         console.log(err);\n//         this.setState({\n//           isEditing: false,\n//           editPost: null,\n//           editLoading: false,\n//           error: err,\n//         });\n//       });\n//   };\n\n//   statusInputChangeHandler = (input, value) => {\n//     this.setState({ status: value });\n//   };\n\n//   deletePostHandler = (postId) => {\n//     this.setState({ postsLoading: true });\n\n//     return this.props.client\n//       .mutate({ mutation: MUTATIONS.DELETE_POST, variables: { postId } })\n//       .then((resData) => {\n//         if (resData.errors) {\n//           throw new Error(\"Deleting the post failed!\");\n//         }\n\n//         console.log(\"POST DELETED:\", resData);\n\n//         this.loadPosts();\n//       })\n//       .catch((err) => {\n//         console.log(err);\n//         this.setState({ postsLoading: false, error: err });\n//       });\n//   };\n\n//   errorHandler = () => {\n//     this.setState({ error: null });\n//   };\n\n//   catchError = (error) => {\n//     this.setState({ error: error });\n//   };\n\n//   render() {\n//     return (\n//       <Fragment>\n//         <ErrorHandler error={this.state.error} onHandle={this.errorHandler} />\n//         <FeedEdit\n//           editing={this.state.isEditing}\n//           selectedPost={this.state.editPost}\n//           loading={this.state.editLoading}\n//           onCancelEdit={this.cancelEditHandler}\n//           onFinishEdit={this.finishEditHandler}\n//         />\n//         <section className=\"feed__status\">\n//           <form onSubmit={this.statusUpdateHandler}>\n//             <Input\n//               type=\"text\"\n//               placeholder=\"Your status\"\n//               control=\"input\"\n//               onChange={this.statusInputChangeHandler}\n//               value={this.state.status}\n//             />\n//             <Button mode=\"flat\" type=\"submit\">\n//               Update\n//             </Button>\n//           </form>\n//         </section>\n//         <section className=\"feed__control\">\n//           <Button mode=\"raised\" design=\"accent\" onClick={this.newPostHandler}>\n//             New Post\n//           </Button>\n//         </section>\n//         <section className=\"feed\">\n//           {this.state.postsLoading && (\n//             <div style={{ textAlign: \"center\", marginTop: \"2rem\" }}>\n//               <Loader />\n//             </div>\n//           )}\n//           {this.state.posts.length <= 0 && !this.state.postsLoading ? (\n//             <p style={{ textAlign: \"center\" }}>No posts found.</p>\n//           ) : null}\n//           {!this.state.postsLoading && (\n//             <Paginator\n//               onPrevious={this.loadPosts.bind(this, \"previous\")}\n//               onNext={this.loadPosts.bind(this, \"next\")}\n//               lastPage={Math.ceil(this.state.totalPosts / 2)}\n//               currentPage={this.state.postPage}\n//             >\n//               {this.state.posts.map((post) => (\n//                 <Post\n//                   key={post._id}\n//                   id={post._id}\n//                   author={post.creator.name}\n//                   date={new Date(post.createdAt).toLocaleDateString(\"en-US\")}\n//                   title={post.title}\n//                   image={post.imageUrl}\n//                   content={post.content}\n//                   onStartEdit={this.startEditPostHandler.bind(this, post._id)}\n//                   onDelete={this.deletePostHandler.bind(this, post._id)}\n//                 />\n//               ))}\n//             </Paginator>\n//           )}\n//         </section>\n//       </Fragment>\n//     );\n//   }\n// }\n\nexport default withRouter(Feed);\n// export default withApollo(Feed);\n","import { useQuery } from \"@apollo/client\";\nimport React from \"react\";\nimport * as QUERIES from \"../../../apollo/queries\";\nimport Image from \"../../../components/Image/Image\";\nimport \"./SinglePost.css\";\n\nconst SinglePost = (props) => {\n  const postId = props.match.params.postId;\n  const { loading, error, data } = useQuery(QUERIES.GET_POST, {\n    variables: { postId },\n  });\n\n  if (loading) {\n    return <h2>Loading...</h2>;\n  }\n\n  if (error) {\n    throw new Error(\"Fetching post failed!\");\n  }\n\n  const title = data.post.title;\n  const author = data.post.creator.name;\n  const date = new Date(data.post.createdAt).toLocaleDateString(\"en-US\");\n  const image = \"http://localhost:8080/\" + data.post.imageUrl;\n  const content = data.post.content;\n\n  return (\n    <section className=\"single-post\">\n      <h1>{title}</h1>\n      <h2>\n        Created by {author} on {new Date(date).toLocaleDateString(\"en-US\")}\n      </h2>\n      <div className=\"single-post__image\">\n        <Image contain imageUrl={image} />\n      </div>\n      <p>{content}</p>\n    </section>\n  );\n};\n\n// class SinglePost extends Component {\n//   state = {\n//     title: \"\",\n//     author: \"\",\n//     date: \"\",\n//     image: \"\",\n//     content: \"\",\n//   };\n\n//   componentDidMount() {\n//     const postId = this.props.match.params.postId;\n\n//     this.props.client\n//       .query({ query: QUERIES.GET_POST, variables: { postId } })\n//       .then((resData) => {\n//         if (resData.errors) {\n//           throw new Error(\"Fetching post failed!\");\n//         }\n\n//         this.setState({\n//           title: resData.data.post.title,\n//           author: resData.data.post.creator.name,\n//           image: \"http://localhost:8080/\" + resData.data.post.imageUrl,\n//           date: new Date(resData.data.post.createdAt).toLocaleDateString(\n//             \"en-US\"\n//           ),\n//           content: resData.data.post.content,\n//         });\n//       })\n//       .catch((err) => {\n//         console.log(err);\n//       });\n//   }\n\n//   render() {\n//     return (\n//       <section className=\"single-post\">\n//         <h1>{this.state.title}</h1>\n//         <h2>\n//           Created by {this.state.author} on {this.state.date}\n//         </h2>\n//         <div className=\"single-post__image\">\n//           <Image contain imageUrl={this.state.image} />\n//         </div>\n//         <p>{this.state.content}</p>\n//       </section>\n//     );\n//   }\n// }\n\nexport default SinglePost;\n// export default withApollo(SinglePost);\n","import { useMutation, useQuery } from \"@apollo/client\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Redirect, Route, Switch, withRouter } from \"react-router-dom\";\nimport * as MUTATIONS from \"./apollo/mutations\";\nimport * as QUERIES from \"./apollo/queries\";\nimport \"./App.css\";\nimport Backdrop from \"./components/Backdrop/Backdrop\";\nimport ErrorHandler from \"./components/ErrorHandler/ErrorHandler\";\nimport Layout from \"./components/Layout/Layout\";\nimport MainNavigation from \"./components/Navigation/MainNavigation/MainNavigation\";\nimport MobileNavigation from \"./components/Navigation/MobileNavigation/MobileNavigation\";\nimport Toolbar from \"./components/Toolbar/Toolbar\";\nimport LoginPage from \"./pages/Auth/Login\";\nimport SignupPage from \"./pages/Auth/Signup\";\nimport FeedPage from \"./pages/Feed/Feed\";\nimport SinglePostPage from \"./pages/Feed/SinglePost/SinglePost\";\n\nconst App = (props) => {\n  const [state, setState] = useState({\n    showMobileNav: false,\n    showBackdrop: false,\n    error: null,\n    isAuth: false,\n    token: null,\n    userId: null,\n    authLoading: false,\n  });\n\n  const loginUserQuery = useQuery(QUERIES.USER_LOGIN, {\n    variables: { email: \"\", password: \"\" },\n  });\n  const [signupUserQuery] = useMutation(MUTATIONS.CREATE_USER);\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    const expiryDate = localStorage.getItem(\"expiryDate\");\n    if (!token || !expiryDate) {\n      return;\n    }\n    if (new Date(expiryDate) <= new Date()) {\n      logoutHandler();\n      return;\n    }\n    const userId = localStorage.getItem(\"userId\");\n    const remainingMilliseconds =\n      new Date(expiryDate).getTime() - new Date().getTime();\n    setState((prevState) => ({\n      ...prevState,\n      isAuth: true,\n      token,\n      userId,\n    }));\n\n    setAutoLogout(remainingMilliseconds);\n  }, []);\n\n  const mobileNavHandler = (isOpen) => {\n    setState((prevState) => ({\n      ...prevState,\n      showMobileNav: isOpen,\n      showBackdrop: isOpen,\n    }));\n  };\n\n  const backdropClickHandler = () => {\n    setState((prevState) => ({\n      ...prevState,\n      showMobileNav: false,\n      showBackdrop: false,\n      setError: null,\n    }));\n  };\n\n  const logoutHandler = () => {\n    setState((prevState) => ({\n      ...prevState,\n      isAuth: false,\n      token: null,\n    }));\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expiryDate\");\n    localStorage.removeItem(\"userId\");\n  };\n\n  const loginHandler = (event, authData) => {\n    event.preventDefault();\n    setState((prevState) => ({\n      ...prevState,\n      authLoading: true,\n    }));\n\n    loginUserQuery\n      .refetch({\n        email: authData.email,\n        password: authData.password,\n      })\n\n      .then((resData) => {\n\n        setState((prevState) => ({\n          ...prevState,\n          isAuth: true,\n          token: resData.data.login.token,\n          authLoading: false,\n          userId: resData.data.login.userId,\n        }));\n\n        localStorage.setItem(\"token\", resData.data.login.token);\n        localStorage.setItem(\"userId\", resData.data.login.userId);\n        const remainingMilliseconds = 60 * 60 * 1000;\n        const expiryDate = new Date(\n          new Date().getTime() + remainingMilliseconds\n        );\n        localStorage.setItem(\"expiryDate\", expiryDate.toISOString());\n        setAutoLogout(remainingMilliseconds);\n      })\n      .catch((err) => {\n        console.log(err.code);\n        setState((prevState) => ({\n          ...prevState,\n          isAuth: false,\n          authLoading: false,\n          error: err,\n        }));\n      });\n  };\n\n  const signupHandler = (event, authData) => {\n    event.preventDefault();\n    setState((prevState) => ({\n      ...prevState,\n      authLoading: true,\n    }));\n\n    signupUserQuery({\n      variables: {\n        email: authData.signupForm.email.value,\n        name: authData.signupForm.name.value,\n        password: authData.signupForm.password.value,\n      },\n    })\n      .then((resData) => {\n        if (resData.errors && resData.errors[0].status === 422) {\n          throw new Error(\n            \"Validation failed. Make sure the email address isn't used yet!\"\n          );\n        }\n        if (resData.errors) {\n          throw new Error(\"User creation failed!\");\n        }\n        console.log(resData);\n        setState((prevState) => ({\n          ...prevState,\n          isAuth: false,\n          authLoading: false,\n        }));\n        props.history.replace(\"/\");\n      })\n      .catch((err) => {\n        console.log(err);\n        setState((prevState) => ({\n          ...prevState,\n          isAuth: false,\n          authLoading: false,\n          error: err,\n        }));\n      });\n  };\n\n  const setAutoLogout = (milliseconds) => {\n    setTimeout(() => {\n      logoutHandler();\n    }, milliseconds);\n  };\n\n  const errorHandler = () => {\n    setState((prevState) => ({\n      ...prevState,\n      error: null,\n    }));\n  };\n\n  let routes = (\n    <Switch>\n      <Route\n        path=\"/\"\n        exact\n        render={(props) => (\n          <LoginPage\n            {...props}\n            onLogin={loginHandler}\n            loading={state.authLoading}\n          />\n        )}\n      />\n      <Route\n        path=\"/signup\"\n        exact\n        render={(props) => (\n          <SignupPage\n            {...props}\n            onSignup={signupHandler}\n            loading={state.authLoading}\n          />\n        )}\n      />\n      <Redirect to=\"/\" />\n    </Switch>\n  );\n\n  if (state.isAuth) {\n    routes = (\n      <Switch>\n        <Route\n          path=\"/\"\n          exact\n          render={(props) => (\n            <FeedPage userId={state.userId} token={state.token} />\n          )}\n        />\n        <Route\n          path=\"/:postId\"\n          render={(props) => (\n            <SinglePostPage\n              {...props}\n              userId={state.userId}\n              token={state.token}\n            />\n          )}\n        />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <Fragment>\n      {state.showBackdrop && <Backdrop onClick={backdropClickHandler} />}\n      <ErrorHandler error={state.error} onHandle={errorHandler} />\n      <Layout\n        header={\n          <Toolbar>\n            <MainNavigation\n              onOpenMobileNav={() => {\n                mobileNavHandler(true);\n              }}\n              onLogout={logoutHandler}\n              isAuth={state.isAuth}\n            />\n          </Toolbar>\n        }\n        mobileNav={\n          <MobileNavigation\n            open={state.showMobileNav}\n            mobile\n            onChooseItem={() => {\n              mobileNavHandler(false);\n            }}\n            onLogout={logoutHandler}\n            isAuth={state.isAuth}\n          />\n        }\n      />\n      {routes}\n    </Fragment>\n  );\n};\n\n// class App extends Component {\n//   state = {\n//     showBackdrop: false,\n//     showMobileNav: false,\n//     isAuth: false,\n//     token: null,\n//     userId: null,\n//     authLoading: false,\n//     error: null,\n//   };\n\n//   componentDidMount() {\n//     const token = localStorage.getItem(\"token\");\n//     const expiryDate = localStorage.getItem(\"expiryDate\");\n//     if (!token || !expiryDate) {\n//       return;\n//     }\n//     if (new Date(expiryDate) <= new Date()) {\n//       this.logoutHandler();\n//       return;\n//     }\n//     const userId = localStorage.getItem(\"userId\");\n//     const remainingMilliseconds =\n//       new Date(expiryDate).getTime() - new Date().getTime();\n//     this.setState({ isAuth: true, token: token, userId: userId });\n//     this.setAutoLogout(remainingMilliseconds);\n//   }\n\n//   mobileNavHandler = (isOpen) => {\n//     this.setState({ showMobileNav: isOpen, showBackdrop: isOpen });\n//   };\n\n//   backdropClickHandler = () => {\n//     this.setState({ showBackdrop: false, showMobileNav: false, error: null });\n//   };\n\n//   logoutHandler = () => {\n//     this.setState({ isAuth: false, token: null });\n//     localStorage.removeItem(\"token\");\n//     localStorage.removeItem(\"expiryDate\");\n//     localStorage.removeItem(\"userId\");\n//   };\n\n//   loginHandler = (event, authData) => {\n//     event.preventDefault();\n//     this.setState({ authLoading: true });\n\n//     this.props.client\n//       .query({\n//         query: QUERIES.USER_LOGIN,\n//         variables: { email: authData.email, password: authData.password },\n//       })\n//       .then((resData) => {\n//         if (resData.errors && resData.errors[0].status === 422) {\n//           throw new Error(\n//             \"Validation failed. Make sure the email address isn't used yet!\"\n//           );\n//         }\n//         if (resData.errors) {\n//           throw new Error(\"User login failed!\");\n//         }\n//         console.log(resData);\n//         this.setState({\n//           isAuth: true,\n//           token: resData.data.login.token,\n//           authLoading: false,\n//           userId: resData.data.login.userId,\n//         });\n//         localStorage.setItem(\"token\", resData.data.login.token);\n//         localStorage.setItem(\"userId\", resData.data.login.userId);\n//         const remainingMilliseconds = 60 * 60 * 1000;\n//         const expiryDate = new Date(\n//           new Date().getTime() + remainingMilliseconds\n//         );\n//         localStorage.setItem(\"expiryDate\", expiryDate.toISOString());\n//         this.setAutoLogout(remainingMilliseconds);\n//       })\n//       .catch((err) => {\n//         console.log(err);\n//         this.setState({\n//           isAuth: false,\n//           authLoading: false,\n//           error: err,\n//         });\n//       });\n//   };\n\n//   signupHandler = (event, authData) => {\n//     event.preventDefault();\n//     this.setState({ authLoading: true });\n\n//     this.props.client\n//       .mutate({\n//         mutation: MUTATIONS.CREATE_USER,\n//         variables: {\n//           email: authData.signupForm.email.value,\n//           name: authData.signupForm.name.value,\n//           password: authData.signupForm.password.value,\n//         },\n//       })\n\n//       .then((resData) => {\n//         if (resData.errors && resData.errors[0].status === 422) {\n//           throw new Error(\n//             \"Validation failed. Make sure the email address isn't used yet!\"\n//           );\n//         }\n//         if (resData.errors) {\n//           throw new Error(\"User creation failed!\");\n//         }\n//         console.log(resData);\n//         this.setState({ isAuth: false, authLoading: false });\n//         this.props.history.replace(\"/\");\n//       })\n//       .catch((err) => {\n//         console.log(err);\n//         this.setState({\n//           isAuth: false,\n//           authLoading: false,\n//           error: err,\n//         });\n//       });\n//   };\n\n//   setAutoLogout = (milliseconds) => {\n//     setTimeout(() => {\n//       this.logoutHandler();\n//     }, milliseconds);\n//   };\n\n//   errorHandler = () => {\n//     this.setState({ error: null });\n//   };\n\n//   render() {\n//     let routes = (\n//       <Switch>\n//         <Route\n//           path=\"/\"\n//           exact\n//           render={(props) => (\n//             <LoginPage\n//               {...props}\n//               onLogin={this.loginHandler}\n//               loading={this.state.authLoading}\n//             />\n//           )}\n//         />\n//         <Route\n//           path=\"/signup\"\n//           exact\n//           render={(props) => (\n//             <SignupPage\n//               {...props}\n//               onSignup={this.signupHandler}\n//               loading={this.state.authLoading}\n//             />\n//           )}\n//         />\n//         <Redirect to=\"/\" />\n//       </Switch>\n//     );\n\n//     if (this.state.isAuth) {\n//       routes = (\n//         <Switch>\n//           <Route\n//             path=\"/\"\n//             exact\n//             render={(props) => (\n//               <FeedPage userId={this.state.userId} token={this.state.token} />\n//             )}\n//           />\n//           <Route\n//             path=\"/:postId\"\n//             render={(props) => (\n//               <SinglePostPage\n//                 {...props}\n//                 userId={this.state.userId}\n//                 token={this.state.token}\n//               />\n//             )}\n//           />\n//           <Redirect to=\"/\" />\n//         </Switch>\n//       );\n//     }\n\n//     return (\n//       <Fragment>\n//         {this.state.showBackdrop && (\n//           <Backdrop onClick={this.backdropClickHandler} />\n//         )}\n//         <ErrorHandler error={this.state.error} onHandle={this.errorHandler} />\n//         <Layout\n//           header={\n//             <Toolbar>\n//               <MainNavigation\n//                 onOpenMobileNav={this.mobileNavHandler.bind(this, true)}\n//                 onLogout={this.logoutHandler}\n//                 isAuth={this.state.isAuth}\n//               />\n//             </Toolbar>\n//           }\n//           mobileNav={\n//             <MobileNavigation\n//               open={this.state.showMobileNav}\n//               mobile\n//               onChooseItem={this.mobileNavHandler.bind(this, false)}\n//               onLogout={this.logoutHandler}\n//               isAuth={this.state.isAuth}\n//             />\n//           }\n//         />\n//         {routes}\n//       </Fragment>\n//     );\n//   }\n// }\n\n// export default withApollo(withRouter(App));\nexport default withRouter(App);\n","import {\n  ApolloClient,\n  ApolloLink,\n  ApolloProvider,\n  concat,\n  HttpLink,\n  InMemoryCache,\n} from \"@apollo/client\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nconst httpLink = new HttpLink({ uri: \"https://hleppps-nodejs-blog.herokuapp.com/graphql\" });\n\nconst authMiddleware = new ApolloLink((operation, forward) => {\n  // add the authorization to the headers\n  operation.setContext(({ headers = {} }) => ({\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\",\n      authorization: \"Bearer \" + localStorage.getItem(\"token\") || null,\n    },\n  }));\n\n  return forward(operation);\n});\n\nconst defaultOptions = {\n  query: {\n    fetchPolicy: \"network-only\",\n  },\n};\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: concat(authMiddleware, httpLink),\n  defaultOptions,\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}